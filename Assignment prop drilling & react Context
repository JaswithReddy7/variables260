React Assignment on React Context:
Imagine you are building an app that displays the details of a user's profile.
The data about the user includes their name and email. The App
component will pass this user data to a deeply nested child component
called Profile.


â€£ In this assignment, you will:
1. Use Prop Drilling to pass the data from App to Profile.
2. Use React Context to pass the data directly to Profile without going
through each component.



Implementation:

import React, { createContext, useContext } from 'react';

// 1. Using Prop Drilling
function AppPropDrilling() {
  const user = { name: 'K.Jaswith Reddy', email: '2211cs010260@mallareddyuniversity.ac.in' };
  return <User1 user={user} />;
}

function User1({ user }) {
  return <User2 user={user} />;
}

function User2({ user }) {
  return <User3 user={user} />;
}

function User3({ user }) {
  return <Profile user={user} />;
}

function Profile({ user }) {
  return (
    <div>
      <h2>Name: {user.name}</h2>
      <h3>Email: {user.email}</h3>
    </div>
  );
}

// 2. Using React Context
const UserContext = createContext();

function AppContext() {
  const user = { name: 'K.Jaswith Reddy', email: '2211cs010260@mallareddyuniversity.ac.in' };
  return (
    <UserContext.Provider value={user}>
      <User1Context />
    </UserContext.Provider>
  );
}

function User1Context() {
  return <User2Context />;
}

function User2Context() {
  return <User3Context />;
}

function User3Context() {
  return <ProfileContext />;
}

function ProfileContext() {
  const user = useContext(UserContext);
  return (
    <div>
      <h2>Name: {user.name}</h2>
      <h3>Email: {user.email}</h3>
    </div>
  );
}

export default function App() {
  return (
    <div>
      {/* <h1>Using Prop Drilling</h1> */}
      <AppPropDrilling />
      <hr />
      {/* <h1>Using React Context</h1> */}
      <AppContext />
    </div>
  );
}
