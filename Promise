27/01/2025

Promise:
A promise is a special Javascript object that represents the eventual completion (or failure) of an asynchronous operation.

1)three states
--1)pending: The initial state , the promise is still waiting for the operation to finish
--2)Fulfilled: The operation completed Successfully.
--3)Rejected: The operation failed.

Exp:
To create a promise, new Promise();
The promise constructor takes a function with two parameters:
resolve --to mark as the promise is successful
reject --to mark is as failed 

Handling:
.then() method is called when the promise is fulfilled.
It receives the result from the resolve();
.catch() method is called when promise is rejected;
it receives the result from the reject();

EX:
let myPromise = new Promise((resolve,reject)=>{
let success=true

})

Chaining process:


1)promise with setTimeOut:
--using setTimeOut the promise will resolve after certain amount of time 3 

2)

Implementation:L


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <script>
    let fetchData = new Promise
    /*
    let delayedPromise = new Promise((resolve, reject) => {
      setTimeout(() => {
          resolve("Promise resolved after 2 seconds");
      }, 2000); 
    });
  
    delayedPromise
      .then(result => {
          console.log(result); 
      })
      .catch(error => {
          console.log("Error:",error);
    });*/
    /*let myPromise = new Promise((resolve,reject)=>{
      let success=true
      if(success){
        resolve("promise received")
      }else{
        reject("the operation failed")
      }
      });
      myPromise.then(result=>{
        console.log(result);
      })
      myPromise.catch(error=>{
        console.log(error);
      })*/
      
      
  </script>
</body>
</html>
